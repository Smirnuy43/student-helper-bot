from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

router = Router()

class UserState(StatesGroup):
    choosing_language = State()
    waiting_for_task = State()

@router.message(F.text == "/start")
async def cmd_start(message: Message, state: FSMContext):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é.\n\n"
        "–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º! –í—ã–±–µ—Ä–∏ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è:",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="Python"), KeyboardButton(text="C++")],
                [KeyboardButton(text="C"), KeyboardButton(text="C#")],
            ],
            resize_keyboard=True
        )
    )
    await state.set_state(UserState.choosing_language)

@router.message(UserState.choosing_language)
async def language_chosen(message: Message, state: FSMContext):
    language = message.text.strip()
    await state.update_data(language=language)
    await state.set_state(UserState.waiting_for_task)

    await message.answer(
        f"‚úÖ –Ø–∑—ã–∫ –≤—ã–±—Ä–∞–Ω: {language}\n–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ –º–Ω–µ —É—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏ ‚Äî —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ —Ñ–∞–π–ª–æ–º.",
        reply_markup=None
    )
